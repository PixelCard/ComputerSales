@model IEnumerable<ComputerSales.Application.UseCaseDTO.ProductOverView_DTO.ProductOverViewOutput>
@{
    ViewData["Title"] = "Product Overviews";
        Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    var productId = ViewBag.ProductId as long?;
    var productSKU = ViewBag.ProductSKU as string;
    var toVn = ViewBag.ToVn as Func<DateTime?, string>;
}

<div class="bg-white rounded-lg shadow-sm border border-gray-200">
    <!-- Header -->
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-2xl font-bold text-gray-900">Product Overviews</h1>
                <p class="text-sm text-gray-600 mt-1">
                    Managing overview blocks for product: <span class="font-medium text-blue-600">@productSKU</span>
                </p>
            </div>
            <div class="flex items-center gap-3">
                <a asp-action="ProductOverViewsCreate" asp-route-productId="@productId" 
                   class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors">
                    <i class="fas fa-plus mr-2"></i>
                    Add Overview Block
                </a>
                <a asp-area="Admin" asp-controller="Product" asp-action="Index" 
                   class="inline-flex items-center px-4 py-2 bg-gray-600 text-white text-sm font-medium rounded-lg hover:bg-gray-700 transition-colors">
                    <i class="fas fa-arrow-left mr-2"></i>
                    Back to Products
                </a>
            </div>
        </div>
    </div>

    <!-- Content -->
    <div class="p-6">
        @if (Model.Any())
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Order
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Block Type
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Content Preview
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Created Date
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var item in Model)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                        @item.DisplayOrder
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                                        @(item.BlockType.ToString() switch {
                                            "Text" => "bg-green-100 text-green-800",
                                            "List" => "bg-yellow-100 text-yellow-800", 
                                            "Image" => "bg-purple-100 text-purple-800",
                                            "Logo" => "bg-indigo-100 text-indigo-800",
                                            "Table" => "bg-red-100 text-red-800",
                                            _ => "bg-gray-100 text-gray-800"
                                        })">
                                        <i class="fas @(item.BlockType.ToString() switch {
                                            "Text" => "fa-text-width",
                                            "List" => "fa-list", 
                                            "Image" => "fa-image",
                                            "Logo" => "fa-trademark",
                                            "Table" => "fa-table",
                                            _ => "fa-question"
                                        }) mr-1"></i>
                                        @item.BlockType
                                    </span>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="max-w-xs">
                                        @if (item.BlockType.ToString() == "Text" || item.BlockType.ToString() == "List")
                                        {
                                            <p class="text-sm text-gray-900 truncate">
                                                @(string.IsNullOrEmpty(item.TextContent) ? "No content" : item.TextContent)
                                            </p>
                                        }
                                        else if (item.BlockType.ToString() == "Image" || item.BlockType.ToString() == "Logo")
                                        {
                                            <div class="flex items-center">
                                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                                {
                                                    <img src="@item.ImageUrl" alt="Preview" class="w-8 h-8 rounded object-cover mr-2">
                                                }
                                                <span class="text-sm text-gray-600">
                                                    @(string.IsNullOrEmpty(item.Caption) ? "No caption" : item.Caption)
                                                </span>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-sm text-gray-500">Table content</span>
                                        }
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @toVn(item.CreateDate)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex items-center gap-2">
                                        <a asp-action="ProductOverViewsDetails" asp-route-id="@item.ProductOverviewId" 
                                           class="text-blue-600 hover:text-blue-900 transition-colors" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.ProductOverviewId" 
                                           class="text-indigo-600 hover:text-indigo-900 transition-colors" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="ProductOverViewsDelete" asp-route-id="@item.ProductOverviewId" 
                                           class="text-red-600 hover:text-red-900 transition-colors" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="mx-auto w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mb-4">
                    <i class="fas fa-file-alt text-3xl text-gray-400"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No overview blocks found</h3>
                <p class="text-gray-500 mb-6">Get started by creating your first overview block for this product.</p>
                <a asp-action="ProductOverViewsCreate" asp-route-productId="@productId" 
                   class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors">
                    <i class="fas fa-plus mr-2"></i>
                    Add Overview Block
                </a>
            </div>
        }
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["Success"] != null)
{
    <div class="fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg shadow-lg z-50" id="success-message">
        <div class="flex items-center">
            <i class="fas fa-check-circle mr-2"></i>
            @TempData["Success"]
        </div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="fixed top-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg shadow-lg z-50" id="error-message">
        <div class="flex items-center">
            <i class="fas fa-exclamation-circle mr-2"></i>
            @TempData["Error"]
        </div>
    </div>
}

@section Scripts {
    <script>
        // Auto-hide success/error messages
        setTimeout(function() {
            const successMsg = document.getElementById('success-message');
            const errorMsg = document.getElementById('error-message');
            if (successMsg) successMsg.style.display = 'none';
            if (errorMsg) errorMsg.style.display = 'none';
        }, 5000);
    </script>
}
