@model ComputerSalesProject_MVC.Areas.Admin.Models.StatictistViewModel.StatisticFilterVM
@{
    ViewData["Title"] = "Thống kê doanh thu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6">
    <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">📈 @ViewData["Title"]</h1>
            <p class="text-gray-600">Phân tích và thống kê doanh thu chi tiết</p>
        </div>

        <!-- Filter Form -->
        <div class="bg-white rounded-2xl shadow-xl p-8 mb-8 border border-gray-100">
            <form asp-action="StatictistHome" method="post" id="filterForm">
                @Html.AntiForgeryToken()
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 items-end">
                    <!-- Loại thống kê -->
                    <div class="space-y-2">
                        <label class="block text-sm font-semibold text-gray-700">Kiểu thống kê</label>
                        <select asp-for="Type" id="typeSelect" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white">
                            <option value="day">📅 Theo ngày</option>
                            <option value="week">📊 Theo tuần</option>
                            <option value="month">📆 Theo tháng</option>
                            <option value="year">🗓️ Theo năm</option>
                        </select>
                    </div>

                    <!-- Bộ chọn ngày (hiển thị cho day và week) -->
                    <div class="space-y-2 date-range">
                        <label class="block text-sm font-semibold text-gray-700">Từ ngày</label>
                        <input asp-for="FromDate" type="date" id="fromDate" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" />
                    </div>

                    <div class="space-y-2 date-range">
                        <label class="block text-sm font-semibold text-gray-700">Đến ngày</label>
                        <input asp-for="ToDate" type="date" id="toDate" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" />
                    </div>

                    <!-- Bộ chọn tháng (hiển thị cho month) -->
                    <div class="space-y-2 month-range hidden">
                        <label class="block text-sm font-semibold text-gray-700">Tháng</label>
                        <select asp-for="Month" id="monthSelect" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white">
                            <option value="1">Tháng 1</option>
                            <option value="2">Tháng 2</option>
                            <option value="3">Tháng 3</option>
                            <option value="4">Tháng 4</option>
                            <option value="5">Tháng 5</option>
                            <option value="6">Tháng 6</option>
                            <option value="7">Tháng 7</option>
                            <option value="8">Tháng 8</option>
                            <option value="9">Tháng 9</option>
                            <option value="10">Tháng 10</option>
                            <option value="11">Tháng 11</option>
                            <option value="12">Tháng 12</option>
                        </select>
                    </div>

                    <!-- Bộ chọn năm (hiển thị cho month và year) -->
                    <div class="space-y-2 year-range">
                        <label class="block text-sm font-semibold text-gray-700">Năm</label>
                        <input asp-for="Year" type="number" min="2000" max="2100" id="yearSelect" value="@DateTime.Now.Year" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200" />
                    </div>

                    <!-- Submit Button -->
                    <div>
                        <button type="submit" class="w-full bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-6 py-3 rounded-lg font-semibold hover:from-blue-700 hover:to-indigo-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                            🔍 Thống kê
                        </button>
                    </div>
                </div>
            </form>
        </div>

        @if (Model.Results != null && Model.Results.Any())
        {
            <!-- Charts Section -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
                <!-- Biểu đồ cột -->
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mr-4">
                                <span class="text-2xl">📊</span>
                            </div>
                            <div>
                                <h3 class="text-xl font-bold text-gray-800">Biểu đồ cột - Doanh thu</h3>
                                <p class="text-gray-600">Thống kê doanh thu theo thời gian</p>
                            </div>
                        </div>
                        <div class="h-80">
                            <canvas id="revenueChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Biểu đồ tròn -->
                <div class="lg:col-span-1">
                    <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mr-4">
                                <span class="text-2xl">🥧</span>
                            </div>
                            <div>
                                <h3 class="text-xl font-bold text-gray-800">Biểu đồ tròn</h3>
                                <p class="text-gray-600">Tỷ lệ doanh thu</p>
                            </div>
                        </div>
                        <div class="h-80">
                            <canvas id="pieChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Data Table -->
            <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
                <div class="flex items-center mb-6">
                    <div class="w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mr-4">
                        <span class="text-2xl">📋</span>
                    </div>
                    <div>
                        <h3 class="text-xl font-bold text-gray-800">Chi tiết dữ liệu</h3>
                        <p class="text-gray-600">Bảng thống kê chi tiết</p>
                    </div>
                </div>
                
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead>
                            <tr class="border-b-2 border-gray-200">
                                <th class="text-left py-4 px-6 font-semibold text-gray-700">Thời gian</th>
                                <th class="text-center py-4 px-6 font-semibold text-gray-700">Số đơn hàng</th>
                                <th class="text-right py-4 px-6 font-semibold text-gray-700">Doanh thu (VNĐ)</th>
                                <th class="text-center py-4 px-6 font-semibold text-gray-700">Tỷ lệ (%)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var totalRevenue = Model.Results.Sum(r => r.TotalRevenue);
                            }
                            @foreach (var r in Model.Results)
                            {
                                var percentage = totalRevenue > 0 ? (r.TotalRevenue / totalRevenue * 100) : 0;
                                <tr class="border-b border-gray-100 hover:bg-gray-50 transition-colors duration-200">
                                    <td class="py-4 px-6 font-semibold text-gray-800">@r.Label</td>
                                    <td class="py-4 px-6 text-center">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                            @r.OrderCount
                                        </span>
                                    </td>
                                    <td class="py-4 px-6 text-right font-bold text-green-600">@String.Format("{0:N0}", r.TotalRevenue)</td>
                                    <td class="py-4 px-6 text-center">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800">
                                            @percentage.ToString("F1")%
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr class="bg-gradient-to-r from-gray-50 to-gray-100 border-t-2 border-gray-200">
                                <td class="py-4 px-6 font-bold text-gray-800">Tổng cộng</td>
                                <td class="py-4 px-6 text-center">
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-800 text-white">
                                        @Model.Results.Sum(r => r.OrderCount)
                                    </span>
                                </td>
                                <td class="py-4 px-6 text-right font-bold text-green-600">@String.Format("{0:N0}", totalRevenue)</td>
                                <td class="py-4 px-6 text-center">
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
                                        100%
                                    </span>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        }
        else
        {
            <!-- No Data Message -->
            <div class="flex justify-center">
                <div class="max-w-2xl w-full">
                    <div class="bg-white rounded-2xl shadow-xl border-2 border-amber-200 overflow-hidden">
                        <div class="bg-gradient-to-r from-amber-50 to-orange-50 p-8 text-center">
                            <div class="mb-6">
                                <div class="w-24 h-24 bg-amber-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <span class="text-4xl">📊</span>
                                </div>
                                <h3 class="text-2xl font-bold text-amber-800 mb-2">Không có dữ liệu để thống kê</h3>
                                <p class="text-amber-700">
                                    Hiện tại chưa có dữ liệu doanh thu cho khoảng thời gian bạn đã chọn.
                                </p>
                            </div>
                            
                            <div class="bg-white rounded-xl p-6 mb-6 border border-amber-200">
                                <h4 class="font-semibold text-gray-800 mb-4 flex items-center">
                                    <span class="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mr-2 text-sm">💡</span>
                                    Gợi ý:
                                </h4>
                                <ul class="text-left space-y-2 text-gray-700">
                                    <li class="flex items-start">
                                        <span class="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                                        Thử chọn khoảng thời gian khác
                                    </li>
                                    <li class="flex items-start">
                                        <span class="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                                        Kiểm tra xem có đơn hàng nào trong khoảng thời gian này không
                                    </li>
                                    <li class="flex items-start">
                                        <span class="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                                        Thử thống kê theo tháng hoặc năm khác
                                    </li>
                                </ul>
                            </div>
                            
                            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                                <button type="button" 
                                        onclick="resetFilterForm()" 
                                        class="px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-lg font-semibold hover:from-blue-700 hover:to-indigo-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                                    🔄 Thử lại với bộ lọc mới
                                </button>
                                <button type="button" 
                                        onclick="goToHome()" 
                                        class="px-6 py-3 bg-gradient-to-r from-gray-600 to-gray-700 text-white rounded-lg font-semibold hover:from-gray-700 hover:to-gray-800 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                                    🏠 Về trang chủ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const typeSelect = document.getElementById("typeSelect");

        // Hàm ẩn/hiện các vùng nhập theo loại
        function updateDateInputs() {
            const type = typeSelect.value;
            
            // Ẩn tất cả các input
            document.querySelectorAll(".date-range").forEach(el => el.classList.add("hidden"));
            document.querySelectorAll(".month-range").forEach(el => el.classList.add("hidden"));
            document.querySelectorAll(".year-range").forEach(el => el.classList.add("hidden"));

            if (type === "day" || type === "week") {
                // Hiển thị input từ ngày đến ngày cho day và week
                document.querySelectorAll(".date-range").forEach(el => el.classList.remove("hidden"));
            } else if (type === "month") {
                // Hiển thị input tháng và năm cho month
                document.querySelectorAll(".month-range").forEach(el => el.classList.remove("hidden"));
                document.querySelectorAll(".year-range").forEach(el => el.classList.remove("hidden"));
            } else if (type === "year") {
                // Chỉ hiển thị input năm cho year
                document.querySelectorAll(".year-range").forEach(el => el.classList.remove("hidden"));
            }
        }

        // Hàm reset form - phù hợp với .NET Core
        function resetFilterForm() {
            const form = document.getElementById('filterForm');
            if (form) {
                form.reset();
                // Set năm hiện tại làm mặc định
                const yearInput = document.getElementById('yearSelect');
                if (yearInput) {
                    yearInput.value = new Date().getFullYear();
                }
                updateDateInputs();
            }
        }

        // Hàm chuyển về trang chủ - phù hợp với .NET Core
        function goToHome() {
            // Sử dụng window.location.href thay vì reload để chuyển về trang chủ admin
            window.location.href = '@Url.Action("Index", "AdminHome", new { area = "Admin" })';
        }

        // Event listeners
        if (typeSelect) {
            typeSelect.addEventListener("change", updateDateInputs);
            updateDateInputs();
        }

        // Dữ liệu cho biểu đồ
        const labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Results?.Select(r => r.Label) ?? new List<string>()));
        const revenues = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Results?.Select(r => r.TotalRevenue) ?? new List<decimal>()));

        if (labels.length > 0) {
            // Màu sắc Tailwind CSS cho biểu đồ
            const colors = [
                'rgba(59, 130, 246, 0.8)',   // blue-500
                'rgba(239, 68, 68, 0.8)',    // red-500
                'rgba(34, 197, 94, 0.8)',    // green-500
                'rgba(245, 158, 11, 0.8)',   // amber-500
                'rgba(139, 92, 246, 0.8)',   // violet-500
                'rgba(236, 72, 153, 0.8)',   // pink-500
                'rgba(14, 165, 233, 0.8)',   // sky-500
                'rgba(168, 85, 247, 0.8)'    // purple-500
            ];

            const borderColors = colors.map(color => color.replace('0.8', '1'));

            // Biểu đồ cột
            const barCtx = document.getElementById("revenueChart");
            if (barCtx) {
                new Chart(barCtx, {
                    type: "bar",
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "Doanh thu (VNĐ)",
                            data: revenues,
                            backgroundColor: colors.slice(0, labels.length),
                            borderColor: borderColors.slice(0, labels.length),
                            borderWidth: 2,
                            borderRadius: 12,
                            borderSkipped: false,
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleColor: 'white',
                                bodyColor: 'white',
                                borderColor: 'rgba(59, 130, 246, 1)',
                                borderWidth: 1,
                                cornerRadius: 8,
                                callbacks: {
                                    label: function(context) {
                                        return 'Doanh thu: ' + context.parsed.y.toLocaleString('vi-VN') + ' VNĐ';
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: value => value.toLocaleString("vi-VN") + ' VNĐ',
                                    color: '#6B7280'
                                },
                                grid: {
                                    color: 'rgba(107, 114, 128, 0.1)'
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    color: '#6B7280'
                                }
                            }
                        }
                    }
                });
            }

            // Biểu đồ tròn
            const pieCtx = document.getElementById("pieChart");
            if (pieCtx) {
                new Chart(pieCtx, {
                    type: "doughnut",
                    data: {
                        labels: labels,
                        datasets: [{
                            data: revenues,
                            backgroundColor: colors.slice(0, labels.length),
                            borderColor: borderColors.slice(0, labels.length),
                            borderWidth: 3,
                            hoverOffset: 8
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        cutout: '60%',
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 20,
                                    usePointStyle: true,
                                    pointStyle: 'circle',
                                    color: '#374151'
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleColor: 'white',
                                bodyColor: 'white',
                                borderColor: 'rgba(34, 197, 94, 1)',
                                borderWidth: 1,
                                cornerRadius: 8,
                                callbacks: {
                                    label: function(context) {
                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        const percentage = ((context.parsed / total) * 100).toFixed(1);
                                        return context.label + ': ' + context.parsed.toLocaleString('vi-VN') + ' VNĐ (' + percentage + '%)';
                                    }
                                }
                            }
                        }
                    }
                });
            }
        }
    </script>
}
