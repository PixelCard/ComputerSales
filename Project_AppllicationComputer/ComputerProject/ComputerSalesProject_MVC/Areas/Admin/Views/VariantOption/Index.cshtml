@model IEnumerable<ComputerSales.Domain.Entity.EOptional.OptionType>
@{
    ViewData["Title"] = "Quản lý tùy chọn biến thể";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50">
    <!-- Header Section -->
    <div class="bg-white shadow-lg border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <div class="p-3 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-xl shadow-lg">
                        <i class="fas fa-cogs text-white text-2xl"></i>
                    </div>
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">Tùy chọn biến thể</h1>
                        <p class="text-gray-600 mt-1">Quản lý các tùy chọn của Variant #@ViewBag.VariantId</p>
                    </div>
                </div>
                <div class="flex items-center space-x-3">
                    <div class="bg-gradient-to-r from-indigo-100 to-purple-100 px-4 py-2 rounded-lg">
                        <span class="text-indigo-800 font-semibold">@(Model?.Count() ?? 0) tùy chọn</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Action Bar -->
        <div class="bg-white rounded-2xl shadow-xl border border-gray-100 p-6 mb-8">
            <div class="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4">
                <div class="flex items-center">
                    <i class="fas fa-tools text-indigo-500 text-xl mr-3"></i>
                    <h3 class="text-xl font-semibold text-gray-800">Thao tác</h3>
                </div>
                <div class="flex flex-col sm:flex-row gap-3 w-full sm:w-auto">
                    <a asp-action="CreateOptionType" asp-route-productId="@ViewBag.ProductId"
                       asp-route-variantId="@ViewBag.VariantId"
                       class="inline-flex items-center justify-center px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white font-semibold rounded-xl hover:from-green-600 hover:to-emerald-700 transform hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-xl">
                        <i class="fas fa-plus mr-2"></i>Thêm OptionType
                    </a>
                    <a asp-area="Admin" asp-controller="ProductVariant" asp-action="Index" asp-route-productId="@ViewBag.ProductId"
                       class="inline-flex items-center justify-center px-6 py-3 bg-gradient-to-r from-gray-500 to-gray-600 text-white font-semibold rounded-xl hover:from-gray-600 hover:to-gray-700 transform hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-xl">
                        <i class="fas fa-arrow-left mr-2"></i>Quay lại Variant
                    </a>
                </div>
            </div>
        </div>

        <!-- Content Section -->
        @if (Model != null && Model.Any())
        {
            <div class="grid gap-6">
                @foreach (var item in Model)
                {
                    <div class="bg-white rounded-2xl shadow-xl border border-gray-100 p-6 hover:shadow-2xl transition-all duration-300 transform hover:scale-[1.02]">
                        <div class="grid grid-cols-1 lg:grid-cols-12 gap-4 items-center">
                            <!-- ID & Icon -->
                            <div class="lg:col-span-2">
                                <div class="flex items-center space-x-3">
                                    <div class="w-12 h-12 bg-gradient-to-r from-indigo-400 to-purple-500 rounded-xl flex items-center justify-center shadow-lg">
                                        <span class="text-white font-bold text-lg">@item.Id</span>
                                    </div>
                                    <div>
                                        <p class="text-sm font-medium text-gray-900">ID: @item.Id</p>
                                        <p class="text-xs text-gray-500">Mã định danh</p>
                                    </div>
                                </div>
                            </div>

                            <!-- Code -->
                            <div class="lg:col-span-3">
                                <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-4 rounded-xl border border-blue-100">
                                    <p class="text-sm font-semibold text-blue-800 mb-1">Code</p>
                                    <p class="text-lg font-bold text-blue-900">@item.Code</p>
                                </div>
                            </div>

                            <!-- Name -->
                            <div class="lg:col-span-4">
                                <div class="bg-gradient-to-r from-purple-50 to-pink-50 p-4 rounded-xl border border-purple-100">
                                    <p class="text-sm font-semibold text-purple-800 mb-1">Tên tùy chọn</p>
                                    <p class="text-lg font-bold text-purple-900">@item.Name</p>
                                </div>
                            </div>

                            <!-- Actions -->
                            <div class="lg:col-span-3">
                                <div class="flex justify-end">
                                    <a asp-action="CreateOptionValue" asp-route-optionTypeId="@item.Id"
                                       asp-route-variantId="@ViewBag.VariantId"
                                       class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-semibold rounded-xl hover:from-blue-600 hover:to-indigo-700 transform hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-xl">
                                        <i class="fas fa-plus mr-2"></i>Thêm Value
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="bg-white rounded-2xl shadow-xl border border-gray-100 p-12 text-center">
                <div class="flex flex-col items-center">
                    <div class="w-20 h-20 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-full flex items-center justify-center mb-6">
                        <i class="fas fa-cogs text-indigo-500 text-3xl"></i>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-3">Chưa có tùy chọn nào</h3>
                    <p class="text-gray-500 mb-6 text-lg">Hãy thêm tùy chọn đầu tiên cho biến thể này</p>
                    <a asp-action="CreateOptionType" asp-route-productId="@ViewBag.ProductId"
                       asp-route-variantId="@ViewBag.VariantId"
                       class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-green-500 to-emerald-600 text-white font-semibold rounded-xl hover:from-green-600 hover:to-emerald-700 transform hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-xl">
                        <i class="fas fa-plus mr-3"></i>Thêm OptionType đầu tiên
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Custom JavaScript for enhanced interactions -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Add ripple effect to buttons
    const buttons = document.querySelectorAll('a');
    buttons.forEach(button => {
        button.addEventListener('click', function(e) {
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;
            
            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            ripple.classList.add('ripple');
            
            this.appendChild(ripple);
            
            setTimeout(() => {
                ripple.remove();
            }, 600);
        });
    });
});

// Add ripple effect CSS
const style = document.createElement('style');
style.textContent = `
    .ripple {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.6);
        transform: scale(0);
        animation: ripple-animation 0.6s linear;
        pointer-events: none;
    }
    
    keyframes ripple-animation {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }
`;
document.head.appendChild(style);
</script>
