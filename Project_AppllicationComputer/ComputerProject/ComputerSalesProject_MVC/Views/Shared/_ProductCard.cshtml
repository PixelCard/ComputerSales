@model ProductCardVM

@{
    // --- Tính giá hiển thị & % giảm ---
    var hasDiscount = Model.DiscountPrice > 0;
    var showPrice = Math.Max(0, Model.Price - Model.DiscountPrice);

    string PriceToParts(decimal p)
    {
        var s = p.ToString("0.00");
        var i = s[..s.IndexOf('.')];
        var c = s[(s.IndexOf('.') + 1)..];
        return $"<span class=\"text-2xl font-bold text-gray-900\">${i}</span><span class=\"align-top text-sm font-semibold\">.{c}</span>";
    }

    var savePercent = (hasDiscount && Model.Price > 0)
        ? Math.Round(((Model.DiscountPrice/Model.Price)*100), 0)
        : 0;
}

<div class="rounded-2xl border shadow-sm hover:shadow-md transition p-4 max-w-xs bg-white flex flex-col">
  <!-- Label góc trên -->
  <div class="mb-2">
    <span class="inline-flex items-center gap-1 bg-blue-600 text-white text-[11px] font-semibold px-2 py-1 rounded-md">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-3 h-3" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 2l3 7h7l-5.5 4 2 8-6.5-4.5L5.5 21l2-8L2 9h7z" />
      </svg>
      Select
    </span>
  </div>

  <!-- Ảnh -->
  <div class="mb-3">
    <img src="@(Model.Images?.FirstOrDefault() ?? "/images/placeholder.png")"
         alt="@Model.Name" class="w-full h-44 object-contain" />
  </div>

  <!-- Nhóm label icon -->
  <div class="flex items-center gap-2 text-[12px] text-gray-600 mb-2">
    <span class="inline-flex items-center gap-1 bg-gray-100 px-2 py-1 rounded">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
        <path d="M3 7h11v7h-1.35a3.5 3.5 0 10-6.3 0H6a3 3 0 100 2h1.35a3.5 3.5 0 106.3 0H18a2 2 0 002-2v-4l-3-3h-2V5H3v2zM18 9.5h2.5L18 7v2.5z" />
      </svg>
      Free ship
    </span>
    <span class="inline-flex items-center gap-1 bg-gray-100 px-2 py-1 rounded">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 2l7 4v6c0 5-3.5 9-7 10-3.5-1-7-5-7-10V6l7-4zM7 10l5 5 5-5-1.4-1.4L12 12.2 8.4 8.6 7 10z" />
      </svg>
      Đổi trả 7 ngày
    </span>
    <span class="inline-flex items-center gap-1 bg-yellow-100 text-yellow-700 px-2 py-1 rounded">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
        <path d="M13 2L3 14h7l-1 8 10-12h-7l1-8z" />
      </svg>
      Flash
    </span>
  </div>

  <!-- Tên + mô tả ngắn -->
  <h3 class="font-semibold text-gray-900 leading-snug mb-1 line-clamp-2">
    @Model.Name
  </h3>
  <p class="text-sm text-gray-600 mb-2 line-clamp-2">
    @Model.ShortDescription
  </p>

  <!-- Badge Save % -->
  @if (hasDiscount && savePercent > 0)
  {
    <span class="w-fit bg-red-600 text-white text-xs font-bold px-2 py-1 rounded mb-2">
      Save @savePercent%
    </span>
  }


  <!-- Giá -->
  <div class="flex items-baseline gap-2 mb-3">
    @Html.Raw(PriceToParts(showPrice))
    @if (hasDiscount)
    {
      <span class="text-gray-400 line-through">$@Model.Price.ToString("0.00")</span>
    }
  </div>

  <!-- Add to Cart (variant select nằm TRONG form và name = productVariantId) -->
  <form asp-controller="Cart" asp-action="Add" method="post" class="mt-auto">
    @Html.AntiForgeryToken()
    <input type="hidden" name="productId" value="@Model.ProductId" />

    @* Nếu đã biết 1 variant -> gửi hidden *@
    @if (Model.SelectedVariantId is int vid)
    {

      <input type="hidden" name="productVariantId" value="@vid" />
    }
    else if (Model.Variants != null && Model.Variants.Any())
    {
      <div class="mb-3">
        <label class="text-sm text-gray-700">Phiên bản</label>
        <select name="productVariantId" class="mt-1 w-full border rounded-lg px-3 py-2 text-sm" required>
          @* Placeholder nếu chưa có SelectedVariantId *@
          @if (!Model.SelectedVariantId.HasValue)
          {
            <option value="" disabled selected>Chọn phiên bản</option>
          }
          @foreach (var v in Model.Variants)
          {
                        decimal price = v.Price ?? 0m;
                        decimal discount = Math.Max(v.DiscountPrice ?? 0m, 0m);
                        decimal vPrice = Math.Max(0m, price - discount);
                        var isSelected = Model.SelectedVariantId.HasValue && Model.SelectedVariantId.Value == v.VariantId;
                        if (isSelected)
                        {
                            @:
                            <option value="@v.VariantId" selected>@v.SKU - $@vPrice.ToString("0.00")</option>
                        }
                        else
                        {
                            @:
                            <option value="@v.VariantId">@v.SKU - $@vPrice.ToString("0.00")</option>
                        }
                    }
        </select>
      </div>
    }
    <input type="number" name="qty" value="1" min="1" class="w-20 border rounded px-2 py-1 mr-2" />
    <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2.5 rounded-xl transition">
      Add to Cart
    </button>
  </form>
</div>

