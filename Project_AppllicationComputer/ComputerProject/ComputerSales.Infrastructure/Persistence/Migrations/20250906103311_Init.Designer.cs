// <auto-generated />
using ComputerSales.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerSales.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250906103311_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComputerSales.Domain.Entity.Accessories", b =>
                {
                    b.Property<long>("AccessoriesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AccessoriesID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AccessoriesID");

                    b.ToTable("Accessories", (string)null);
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.EAccount.Account", b =>
                {
                    b.Property<int>("IDAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAccount"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("IDRole")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDAccount");

                    b.HasIndex("IDRole");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.EAccount.Role", b =>
                {
                    b.Property<int>("IDRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDRole"));

                    b.Property<string>("TenRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDRole");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductID"));

                    b.Property<long>("AccessoriesID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProviderID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("AccessoriesID");

                    b.HasIndex("ProviderID")
                        .IsUnique();

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.Provider", b =>
                {
                    b.Property<long>("ProviderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProviderID"));

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProviderID");

                    b.ToTable("Provider", (string)null);
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.EAccount.Account", b =>
                {
                    b.HasOne("ComputerSales.Domain.Entity.EAccount.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.Product", b =>
                {
                    b.HasOne("ComputerSales.Domain.Entity.Accessories", "Accessories")
                        .WithMany("Products")
                        .HasForeignKey("AccessoriesID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ComputerSales.Domain.Entity.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Accessories");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.Accessories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.EAccount.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ComputerSales.Domain.Entity.Provider", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
